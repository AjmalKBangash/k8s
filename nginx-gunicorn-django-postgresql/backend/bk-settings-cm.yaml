apiVersion: v1
kind: ConfigMap
metadata:
  name: bk-settings-cm
data:
  settings.py: |
    """
    Django settings for PortfolioBackend project.

    Generated by 'django-admin startproject' using Django 5.0.1.

    For more information on this file, see
    https://docs.djangoproject.com/en/5.0/topics/settings/

    For the full list of settings and their values, see
    https://docs.djangoproject.com/en/5.0/ref/settings/
    """

    from django.conf import settings
    from pathlib import Path
    from datetime import timedelta
    import os
    from decouple import config

    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    # SECRET_KEY = config('SECRET_KEY')
    SECRET_KEY = os.getenv('SECRET_KEY', config('SECRET_KEY'))

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False

    ALLOWED_HOSTS = ['ajmalkhan.online', 'www.ajmalkhan.online', 'localhost', '51.20.65.81','127.0.0.1']
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') #This line configures Django to recognize a specific header indicating that the request is secure when the application is behind a proxy or load balancer


    # Proper Django configuration involves setting the /
    # SECURE_PROXY_SSL_HEADER, /
    # ALLOWED_HOSTS, and /
    # USE_X_FORWARDED_HOST /
    # settings appropriately to handle redirects and other aspects of security and compatibility when running behind a reverse proxy or load balancer.



    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        
        # My Installed and Configured Apps 
        'core',
        'portfoliomodels',
        'corsheaders',
        'rest_framework',
        'django_filters',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
        # MY INSTALLED MIDDLEWRES 
        'corsheaders.middleware.CorsMiddleware',
    ]

    ROOT_URLCONF = 'PortfolioBackend.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'PortfolioBackend.wsgi.application'


    # Database
    # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': BASE_DIR / 'db.sqlite3',
    #     }
    # }

        
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'NAME': config('NAME'),
    #         'USER': config('USER'),
    #         'PASSWORD': config('PASSWORD'),
    #         # 'HOST': '/var/run/postgresql/.s.PGSQL.5432=',  # Path to the Unix socket
    #         # 'HOST': , 
    #         'HOST': config('HOST'), 
    #         'PORT': config('PORT'),
    #     }
    # }

    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'NAME': 'hamad_db',
    #         'USER': 'hamad',
    #         'PASSWORD': 'passwd-hamad-302',
    #         # 'HOST': 'www.dbpsql.com',
    #         'HOST': 'www.dbpsql.com',
    #         'PORT': '32323',
    #     }
    # }

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DB_NAME',config('DB_NAME')),
            'USER': os.getenv('DB_USER',config('DB_USER')),
            'PASSWORD': os.getenv('DB_PASSWORD',config('DB_PASSWORD')),
            'HOST': os.getenv('DB_HOST', config('DB_HOST')),
            'PORT': os.getenv('DB_PORT',config('DB_PORT')),
        }
    }




    # Password validation
    # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]


    # Internationalization
    # https://docs.djangoproject.com/en/5.0/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_TZ = True


    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/5.0/howto/static-files/

    STATIC_URL = 'static/'

    STATICFILES_DIRS = [
        # Add the path to your project's static files (e.g., 'myproject/static/')
        # 'PortfolioBackend/static/',
        os.path.join(BASE_DIR, 'static'),
        # os.path.join(BASE_DIR, 'Media')
    ]

    MEDIA_URL = 'Media/'

    MEDIA_ROOT = os.path.join(BASE_DIR, 'Media')

    STATIC_ROOT = os.path.join(BASE_DIR, 'staticdirectory')
    # STATIC_ROOT = BASE_DIR / 'staticdirectory'

    # Default primary key field type
    # https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


    AUTH_USER_MODEL = 'core.CustomUser'


    # CORS_ALLOWED_ORIGINS = [
    #     "http://localhost:3000",'https://ajmalkhan.online', 'https://www.ajmalkhan.online'  # Add the origin of your React app
    # ]

    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",  # Add the origin of your React app
        "http://127.0.0.0:3000",
        "https://ajmalkhan.online", 
        "http://ajmalkhan.online", 
        "http://www.ajmalkhan.online",
        "https://www.ajmalkhan.online",
        "http://51.20.65.81",
        "https://51.20.65.81"
    ]


    CORS_ALLOW_CREDENTIALS = True

    # from Tasks.throttling import RozConIntMedScopedRate  # THIS WAS PRACTICE CUSTOM USER THROTTLING
    REST_FRAMEWORK = {
        'DEFAULT_AUTHENTICATION_CLASSES': (
            'rest_framework_simplejwt.authentication.JWTAuthentication',
        ),
        'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.ScopedRateThrottle',
        # RozConIntMedScopedRate, # THIS WAS PRACTICE CUSTOM USER THROTTLING
        ],
        'DEFAULT_THROTTLE_RATES': {
            'anon': '10000000/day',
            'user': '10000000/day',
            # 'RCIM': '10/day'   # THIS IS UserRateThrottle  WHERE IT WILL BE SET FOR ALL THE USERS GLOBALLY BUT WE WANT TO SET THROTTLINGON THE BASIS OF POST, GET AND OTHER REQUESTS FOR EACH VIEW, HENCE WE SHOULD GO FOR ScopedRateThrottle
            # 'post_roza': '2/day',
            # 'post_conv': '2/day',
            # 'post_medi': '2/day',
            # 'post_intu': '2/day',
            # 'get_roz': '5/day',
            # 'roz': '8/day',
            # 'med': '1/day',
            # 'RCMISRT': '1/day',
        },
        'DEFAULT_PAGINATION_CLASS': ('rest_framework.pagination.PageNumberPagination'),
        'PAGE_SIZE': (15)
