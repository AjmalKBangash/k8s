apiVersion: apps/v1
kind: Deployment
metadata:
  name: bk-depl-celery-beat
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bk-pods-label-celery-beat
  template:
    metadata:
      labels:
        app: bk-pods-label-celery-beat
    spec:
      # initContainers:
      #   - name: init-static
      #     image: busybox
      #     command:
      #       [
      #         "sh",
      #         "-c",
      #         "cp -r /PortfolioBackend/staticdirectory/* /mnt/data/SharedDirectory/staticdirectory/",
      #       ]
      #     volumeMounts:
      #       - mountPath: /PortfolioBackend/staticdirectory
      #         name: existing-static
      #       - mountPath: /mnt/data/SharedDirectory/staticdirectory
      #         name: shared-storage
      #   - name: init-media
      #     image: busybox
      #     command:
      #       [
      #         "sh",
      #         "-c",
      #         "cp -r /PortfolioBackend/Media/* /mnt/data/SharedDirectory/Media/",
      #       ]
      #     volumeMounts:
      #       - mountPath: /PortfolioBackend/Media
      #         name: existing-media
      #       - mountPath: /mnt/data/SharedDirectory/Media
      #         name: shared-storage
      containers:
        - name: bk-celery-beat
          # image: port-backend:0.0.14
          image: ajmalkhanbangash/port-backend:0.1.4
          # command:
          #   [
          #     "gunicorn",
          #     "--config",
          #     "gunicorn.conf.py",
          #     "PortfolioBackend.wsgi:application",
          #   ]
          # command:
          #   [
          #     "celery",
          #     "-A",
          #     "PortfolioBackend",
          #     "worker",
          #     "--loglevel=info",
          #     "&&",
          #     "celery",
          #     "-A",
          #     "PortfolioBackend",
          #     "beat",
          #     "--loglevel=info",
          #   ]
          command:
            ["sh", "-c", "celery -A PortfolioBackend beat --loglevel=info"]
          ports:
            - containerPort: 8001
          env:
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: postgres-django-secret
                  key: secret-key
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-django-secret
                  key: postgres-db
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-django-secret
                  key: postgres-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-django-secret
                  key: postgres-password
          volumeMounts:
            - mountPath: "/PortfolioBackend/PortfolioBackend/settings.py"
              name: bk-pv-volume
              subPath: settings.py
            # - mountPath: /PortfolioBackend/staticdirectory
            #   name: shared-storage
            #   subPath: staticdirectory
            # - mountPath: /PortfolioBackend/Media
            #   name: shared-storage
            #   subPath: Media
      volumes:
        - name: bk-pv-volume
          configMap:
            name: bk-settings-cm
        # - name: bk-pv-volume02
        #   configMap:
        #     name: bk-gunicorn-cm
        # - name: shared-storage
        #   persistentVolumeClaim:
        #     claimName: bk-static-pvc
        # - name: existing-static
        #   emptyDir: {} # Use an empty directory for temporary storage during init
        # - name: existing-media
        #   emptyDir: {} # Use an empty directory for temporary storage during init
